FROM debian:stretch

RUN sed -i s/deb.debian.org/archive.debian.org/g /etc/apt/sources.list
RUN sed -i 's|security.debian.org|archive.debian.org/|g' /etc/apt/sources.list
RUN sed -i '/stretch-updates/d' /etc/apt/sources.list

RUN apt-get update

RUN apt-get -y install git g++ cmake libboost-dev libboost-filesystem-dev libboost-thread-dev libboost-system-dev libboost-regex-dev libstxxl-dev libxml2-dev libsparsehash-dev libbz2-dev zlib1g-dev libzip-dev libgomp1 lua5.2 liblua5.2-dev libluabind-dev pkg-config libgdal-dev libboost-program-options-dev libboost-iostreams-dev libboost-test-dev libtbb-dev libexpat1-dev wget

#RUN git clone -b 5.21 --single-branch https://github.com/Project-OSRM/osrm-backend.git
# Archive of the lines above, temporary until we modernize the routing tool, might also use 
#RUN wget https://github.com/Project-OSRM/osrm-backend/archive/refs/tags/v5.24.0.tar.gz && tar -xvf v5.24.0.tar.gz && mv /osrm-backend-5.24.0 /osrm-backend
COPY osrm-backend.tar.gz . 
RUN tar -zxvf osrm-backend.tar.gz

COPY /c_binding_resources/table_parameters.hpp osrm-backend/include/engine/api/table_parameters.hpp

RUN cd osrm-backend && mkdir -p build && cd build && cmake .. -DCMAKE_BUILD_TYPE=Release && cmake --build . && cmake --build . --target install

ARG osm_download_url

ARG osm_filename_arg

ENV osm_filename $osm_filename_arg

RUN wget -O "$osm_filename_arg.osm.pbf" --no-check-certificate $osm_download_url

RUN wget https://repo.anaconda.com/miniconda/Miniconda3-py37_4.8.3-Linux-x86_64.sh

RUN bash Miniconda3-py37_4.8.3-Linux-x86_64.sh -b -p /opt/conda

ENV PATH="${PATH}:/opt/conda/bin"

RUN mkdir osrm-backend/defaultprofiles

RUN mv osrm-backend/profiles/*.lua osrm-backend/defaultprofiles/

COPY /veh_profiles/* osrm-backend/profiles/

COPY build_parameters.yml .

COPY build_vehicle_profiles.py .

RUN /opt/conda/bin/python build_vehicle_profiles.py

COPY requirements.txt .

RUN /opt/conda/bin/python -m pip install -r requirements.txt

#RUN conda install cffi==1.12.2

RUN apt-get -y install vim

RUN git clone -b v2.3 https://github.com/pybind/pybind11.git

RUN cp -r osrm-backend/include osrm-backend/example

COPY /c_binding_resources/CMakeLists.txt .

COPY /c_binding_resources/python_bindings.cpp example.cpp

RUN cd osrm-backend/example && mv ../../CMakeLists.txt . && mv ../../example.cpp .

RUN cp -r pybind11 osrm-backend/example/

RUN cd osrm-backend/example && mkdir build && cd build && cmake .. && make

RUN apt-get update

RUN apt-get -y install curl gnupg2

RUN pip install scikit-learn==1.0.2

RUN mkdir data

RUN mkdir data/gps_data_clean

RUN mkdir data/time_and_dist_matrices

COPY ["/local_data/customer_data.xlsx", "data/."]

COPY /local_data/extra_points.csv data/.

COPY /local_data/config.json data/.

COPY /local_data/custom_header.yaml data/.

RUN mkdir maps

RUN mkdir manual_edits

RUN mkdir manual_edits/maps

COPY manual.ipynb .

COPY manual.sh .

COPY Makefile .

RUN mkdir -p py-lib

RUN mv osrm-backend/example/build/osrmbindings.cpython-37m-x86_64-linux-gnu.so py-lib/

#RUN pip uninstall -y typing-extensions && pip uninstall -y typing-extensions && pip install typing-extensions==4.7.1
RUN pip uninstall -y typing-extensions && pip install typing-extensions==4.7.1

COPY src src

ENV PYTHONPATH "${PYTHONPATH}:./py-lib:/src/python"

CMD ["/opt/conda/bin/python", "src/py/main_application.py", "--local"]
